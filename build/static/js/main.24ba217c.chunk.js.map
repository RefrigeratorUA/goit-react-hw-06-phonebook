{"version":3,"sources":["components/PhonebookList/PhonebookList.module.css","redux/counter/action-types.js","redux/counter/counter-reducers.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Section/Section.js","components/Logo/Logo.js","components/AppBar/AppBar.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/PhonebookListItem/PhonebookListItem.js","components/PhonebookList/PhonebookList.js","App.js","components/Loader/Loader.js","index.js"],"names":["module","exports","combineReducers","value","state","type","payload","actionsTypes","step","addContact","createAction","name","number","id","uuidv4","deleteContact","filterContacts","itemsReducer","createReducer","actions","filter","filterReducer","_","items","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","contacts","persistReducer","contactsReducer","counter","counterReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Section","title","children","className","Logo","AppBar","CSSTransition","in","appear","classNames","timeout","unmountOnExit","Notification","errorMessage","props","message","onView","this","setTimeout","Component","ContactForm","handleChange","event","target","setState","handleSubmit","preventDefault","onAddContact","some","item","showNotification","isShow","onSubmit","onChange","disabled","connect","dispatch","onFilterChange","PhonebookListItem","onDelete","onClick","getFilteredContacts","toLowerCase","includes","length","TransitionGroup","component","map","styles","App","Loader","color","visible","height","width","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.24ba217c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookList_enter__1qdy3\",\"enterActive\":\"PhonebookList_enterActive__4Txqp\",\"exit\":\"PhonebookList_exit__3On2U\",\"exitActive\":\"PhonebookList_exitActive__3vB50\"};","const INCREMENT = 'counter/Increment';\nconst DECREMENT = 'counter/Decrement';\n// eslint-disable-next-line\nexport default { INCREMENT, DECREMENT };\n","import { combineReducers } from 'redux';\nimport actionsTypes from './action-types';\n\nconst valueReducer = (state = 10, { type, payload }) => {\n  switch (type) {\n    case actionsTypes.INCREMENT:\n      return state + payload;\n    case actionsTypes.DECREMENT:\n      return state - payload;\n    default:\n      return state;\n  }\n};\nconst stepReducer = (state = 5, action) => state;\n\nexport default combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contact/Add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contact/Delete');\n\nconst filterContacts = createAction('contact/ChangeFilter');\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, filterContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport counterReducer from './counter/counter-reducers';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(persistConfig, contactsReducer),\n  counter: counterReducer,\n});\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\nimport './Section.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import './Logo.css';\n\nconst Logo = () => {\n  return <h1 className=\"logo\">Phonebook</h1>;\n};\n\nexport default Logo;\n","import { CSSTransition } from 'react-transition-group';\nimport Logo from '../Logo';\nimport './AppBar.css';\n\nconst AppBar = () => {\n  return (\n    <header className=\"AppBar-wrapper\">\n      <CSSTransition in={true} appear={true} classNames=\"AppBar-logo\" timeout={500} unmountOnExit>\n        <Logo />\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { Component } from 'react';\n\nclass Notification extends Component {\n  state = {\n    errorMessage: this.props.message,\n  };\n  componentDidMount() {\n    const { onView } = this.props;\n    setTimeout(() => onView('', false), 2000);\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n    return <div className=\"alert\">{errorMessage}</div>;\n  }\n}\n\nexport default Notification;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification';\nimport '../Notification/Notification.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    errorMessage: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact, items } = this.props;\n\n    if (!name) return this.showNotification('Please enter contact name');\n    if (!number) return this.showNotification('Please enter contact number');\n    if (items.some(item => item.name === name)) {\n      this.setState({ name: '', number: '' });\n      return this.showNotification(`${name} is already in contacts`);\n    }\n\n    onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { name, number, errorMessage } = this.state;\n    const isShow = errorMessage ? true : false; // Консоль ругается, еслт in !== boolean\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={isShow} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={errorMessage} />\n          </CSSTransition>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <label>\n            Number\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <br />\n          <button className=\"btn\" type=\"submit\" disabled={(!name && !number) || errorMessage}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => state.contacts;\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input className=\"input\" type=\"text\" onChange={onFilterChange}></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChange: event => dispatch(actions.filterContacts(event.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\n// import styles from './PhonebookListItem.module.css';\n\nconst PhonebookListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className=\"list-item\">\n      {`${name}: `}\n      <span>{number}</span>\n      <button type=\"button\" id={id} onClick={event => onDelete(event.target.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhonebookListItem.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  id: PropTypes.string,\n};\n\nexport default PhonebookListItem;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport actions from '../../redux/contacts/contacts-actions';\nimport Filter from '../Filter';\nimport PhonebookListItem from '../PhonebookListItem';\nimport styles from './PhonebookList.module.css';\n\nconst PhonebookList = ({ contacts, filter, onDelete }) => {\n  return (\n    <>\n      {(contacts.length > 1 || filter) && <Filter />}\n\n      <TransitionGroup component=\"ul\" className=\"list\">\n        {contacts.map(({ name, id, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={styles}>\n            <PhonebookListItem name={name} number={number} id={id} onDelete={onDelete} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nconst getFilteredContacts = (items, filter) =>\n  items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n  filter: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","import Section from './components/Section';\nimport AppBar from './components/AppBar';\nimport ContactForm from './components/ContactForm';\nimport PhonebookList from './components/PhonebookList';\n\nconst App = () => {\n  return (\n    <Section>\n      <AppBar />\n      <ContactForm />\n      <PhonebookList />\n    </Section>\n  );\n};\n\nexport default App;\n","import PropTypes from 'prop-types';\nimport LoaderSpinner from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loader = ({ type = 'ThreeDots', color = '#000', className = 'loader' }) => {\n  return (\n    <LoaderSpinner\n      visible=\"true\"\n      type={type}\n      color={color}\n      height={50}\n      width={50}\n      // timeout={3000} //3 secs\n      className={className}\n    />\n  );\n};\n\nLoader.propTypes = {\n  type: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport Loader from './components/Loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}